/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistasdfhshgfhg

import controlador.ConexionMySQL;                       
import controlador.ControladorPelicula;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Pelicula;

/**
 *
 * @author Usuario
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private ConexionMySQL con;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        con = new ConexionMySQL("practica12");

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        botonTodo = new javax.swing.JButton();
        etiquetaAno = new javax.swing.JLabel();
        textAno = new javax.swing.JTextField();
        botonAno = new javax.swing.JButton();
        botonInsert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Director", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla1);

        botonTodo.setText("Consultar todo");
        botonTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTodoActionPerformed(evt);
            }
        });

        etiquetaAno.setText("Introduzca año");

        botonAno.setText("Ver");
        botonAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnoActionPerformed(evt);
            }
        });

        botonInsert.setText("Añadir");
        botonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(botonInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(72, 72, 72)
                        .addComponent(etiquetaAno, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonAno, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(textAno))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(etiquetaAno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textAno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAno)
                    .addComponent(botonInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTodoActionPerformed

        try {
            con.conectar();
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }

        ControladorPelicula control = new ControladorPelicula(con);

        try {
            ArrayList<Pelicula> arrayPaLlenar = control.obtenerPeliculas();
            DefaultTableModel modelo = (DefaultTableModel) tabla1.getModel();
            modelo.setNumRows(0);

            for (Pelicula p : arrayPaLlenar) {
                ArrayList<String> arrayPaMeter = new ArrayList<>();
                arrayPaMeter.add(p.getTitulo());
                arrayPaMeter.add(p.getDirector());
                arrayPaMeter.add(Integer.toString(p.getPublicacion()));
                modelo.addRow(arrayPaMeter.toArray());
            }

        } catch (SQLException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                con.desconectar();
            } catch (SQLException ex) {
                System.out.println(ex.toString());
            }
        }
    }//GEN-LAST:event_botonTodoActionPerformed

    private void botonAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnoActionPerformed
        try {
            con.conectar();
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }

        if (textAno.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Este campo no puede estar vacío",
                    "Campo vacío",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int ano = Integer.parseInt(textAno.getText());
                ControladorPelicula control = new ControladorPelicula(con);
                ArrayList<Pelicula> arrayPaLlenar = control.peliculasAno(ano);
                DefaultTableModel modelo = (DefaultTableModel) tabla1.getModel();
                modelo.setNumRows(0);

                if (arrayPaLlenar.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No hay ninguna película estrenada después del año " + ano);
                    textAno.setText("");
                } else {
                    for (Pelicula p : arrayPaLlenar) {
                        ArrayList<String> arrayPaMeter = new ArrayList<>();
                        arrayPaMeter.add(p.getTitulo());
                        arrayPaMeter.add(p.getDirector());
                        arrayPaMeter.add(Integer.toString(p.getPublicacion()));
                        modelo.addRow(arrayPaMeter.toArray());
                    }
                }
            } catch (SQLException ex) {
                System.out.println(ex.toString());
            } finally {
                try {
                    con.desconectar();
                } catch (SQLException ex) {
                    System.out.println(ex.toString());
                }
            }
        }

    }//GEN-LAST:event_botonAnoActionPerformed

    private void botonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertActionPerformed
        VentanaInsert v = new VentanaInsert(con);
        v.pack();
        v.setVisible(true);
    }//GEN-LAST:event_botonInsertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAno;
    private javax.swing.JButton botonInsert;
    private javax.swing.JButton botonTodo;
    private javax.swing.JLabel etiquetaAno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla1;
    private javax.swing.JTextField textAno;
    // End of variables declaration//GEN-END:variables
}
